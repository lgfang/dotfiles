# -*-mode:org; coding:utf-8; time-stamp-pattern:"8/#\\+DATE:[ \t]+%Y-%02m-%02d %5z$" -*-
# Created: Fang Lungang 2024-08-17

#+TITLE: My Terminal Emulator Configurations
#+AUTHOR: Fang Lungang
#+DATE: 2025-05-01 +1000

* Timestamps

#+name: tangle-time-stamp
#+begin_src emacs-lisp :tangle no
(concat user-full-name " " (format-time-string "%Y-%m-%d %5z"))
#+end_src

#+begin_src lua :tangle ~/.wezterm.lua :noweb yes
  -- Created: Fang Lungang 2024-08-17
  -- Updated: <<tangle-time-stamp()>>
#+end_src

* wezterm

** wezterm vs iTerm2

As a Tmux + Emacs user on MacOS, I don't need multiplexer etc.. Hence, for me the main considerations are:
- Pros
  - Configuration file vs GUI only configuration.
    - Version controllable
    - Editing configuration files is faster than navigating through the GUI.
  - Custom hyperlinks
- Cons
  - Unable to copy a wrapped long line as one line.
  - The out of box setting is not as usable as iTerm2 to me.
  - Does not render all fonts nicely. For example, "Andale Mono" is much nicer in iTerm2.

** Start
#+begin_src lua :tangle ~/.wezterm.lua
  local wezterm = require 'wezterm'
  local config = wezterm.config_builder()
#+end_src

** Appearance

*** Window and frame
See [[https://github.com/ryanoasis/nerd-fonts/discussions/1103][this post]] for the differences of the 3 variations of nerd fonts, i.e. (nerd
font, nerd font mono, and nerd font propo).

#+begin_src lua :tangle ~/.wezterm.lua
  config.window_decorations = 'RESIZE'
  config.window_padding = { left = 0, right = 0, top = 0, bottom = 0}
  config.enable_tab_bar = false
#+end_src

*** Fonts

#+begin_src lua :tangle ~/.wezterm.lua
  local font_family = 'JetBrains Mono'
  config.font_size = 19
  config.harfbuzz_features = {'calt=0', 'clig=0', 'liga=0'} -- turn off ligature
  config.font =  wezterm.font_with_fallback {
     {
        family = font_family,
        weight = 'Bold',
     },
  }
  config.font_rules = {
    {
      intensity = "Bold",
      font = wezterm.font({ family = font_family, weight = "ExtraBold" }),
    },
  }
#+end_src

*** COMMENT Opacity

#+begin_src lua :tangle ~/.wezterm.lua
  config.window_background_opacity = 0.8
#+end_src
This is interesting, but I often prefer to disable it as the background can be
distracting.

Additionally, for Emacs running in the terminal to support opacity, set its
background to "unspecified-bg" as shown below:
#+begin_src emacs-lisp
  (set-face-background 'default "unspecified-bg")
#+end_src

** Audible Bell
This is needed because audible bell is *not* affected by the system audio volume.
#+begin_src lua :tangle ~/.wezterm.lua
  config.audible_bell = "Disabled"
#+end_src

** Keyboard
#+begin_src lua :tangle ~/.wezterm.lua
  -- Do not set left/right "Alt as "AltGr"
  config.send_composed_key_when_left_alt_is_pressed = false
  config.send_composed_key_when_right_alt_is_pressed = false

  config.disable_default_key_bindings = true
  config.native_macos_fullscreen_mode = true

  config.keys = {
     { action = wezterm.action.CloseCurrentTab {confirm = true}, key = 'w', mods = 'CMD'},
     { action = wezterm.action.QuitApplication, key = 'q', mods = 'CMD'},
     { action = wezterm.action.Hide, key = 'h', mods = 'CMD'},
     { action = wezterm.action.SpawnWindow, key = 'n', mods = 'CMD'},

     { action = wezterm.action.DecreaseFontSize, key = '-', mods = 'CMD'},
     { action = wezterm.action.IncreaseFontSize, key = '=', mods = 'CMD'},

     { action = wezterm.action.PasteFrom 'Clipboard' , key = 'v', mods = 'CMD', },
     { action = wezterm.action.PasteFrom 'PrimarySelection', key = 'v', mods = 'CMD', },
     { action = wezterm.action.ToggleFullScreen, key = 'f', mods = 'CMD|CTRL',},
  }
#+end_src

** Custom hyperlinks
#+begin_src lua :tangle ~/.wezterm.lua
  -- Use the defaults as a base
  config.hyperlink_rules = wezterm.default_hyperlink_rules()
  table.insert(
     config.hyperlink_rules,
     {
        -- example: clicking on SERVER-1234 opens this mongodb sever ticket
        regex = [[\b((SERVER|server)-[0-9]+)\b]],
        format = 'https://jira.mongodb.org/browse/$1'
     }
  )
#+end_src

** Return the config object (end of the config)
#+begin_src lua :tangle ~/.wezterm.lua
  return config
#+end_src
